@page "/ManejarInicio"

@inject IInicioRepository _inicioRepository
@inject IJSRuntime _jsRuntime
@inject IFileService _fileUpload
@inject NavigationManager _navigationManager
@attribute [Authorize(Roles = "Admin")]

<div class="row mt-4">
    <h4 class="card-title text-primary">Manejar Pagina De Inicio</h4>
    @if (isLoading)
    {
        //Loading Symbol
        <div class="text-center pt-4">
            <img src="/images/loading.gif">
        </div>
    }
    else
    {
        <EditForm Model="InicioDto" OnValidSubmit="CambiarInicio">
            <div class="col-lg-4 col-md-6 pb-4">
                <div class="form-group">
                    <label>Editar Titulo Principal</label>
                    <SfRichTextEditor @bind-Value="InicioDto.Titulo">
                        <RichTextEditorToolbarSettings Items="@Tools" />
                    </SfRichTextEditor>
                    <ValidationMessage For="()=>InicioDto.Titulo"></ValidationMessage>
                </div>
            </div>
            <div class="col-lg-4 col-md-6 pb-4">
                <div class="form-group">
                    <label>Editar Parrafo Principal</label>
                    <SfRichTextEditor @bind-Value="InicioDto.ParrafoPrincipal">
                        <RichTextEditorToolbarSettings Items="@Tools" />
                    </SfRichTextEditor>
                    <ValidationMessage For="()=>InicioDto.ParrafoPrincipal"></ValidationMessage>
                </div>
            </div>
            <DataAnnotationsValidator />
            <label>Editar Imagen Principal</label>
            <div class="form-group pa-4 col-md-6">
                <InputFile OnChange="HandleImageUpload"></InputFile>
            </div>

            <MudGrid Justify="Justify.SpaceEvenly">
                <MudItem Class="d-flex justify-center align-center pa-2 md-12" xs="12" Style="width:100%; height:140px;">
                    <MudImage ObjectFit="@InicioDto.ImageFit" ObjectPosition="@InicioDto.ImagePosition" Height="@(SetHeight ? @InicioDto.ImageHeight : null)" Style="width:100%;" Src="@InicioDto.ImagenDeInicio" />
                    <MudImage style="position:absolute;" Src="https://mangoblob20220406.blob.core.windows.net/mango/AlAnonLogo.png" />
                </MudItem>
                <MudItem xs="6" md="6">
                    <MudPaper Class="col-md-12 py-8" Elevation="0">
                        <MudText Typo="Typo.h6">Opciones de Foto Principal</MudText>
                        <MudSelect Label="Stylo" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense" @bind-Value="@InicioDto.ImageFit" Class="mt-4">
                            <MudSelectItem T="ObjectFit" Value="ObjectFit.None">None</MudSelectItem>
                            <MudSelectItem T="ObjectFit" Value="ObjectFit.Cover">Cover</MudSelectItem>
                            <MudSelectItem T="ObjectFit" Value="ObjectFit.Contain">Contain</MudSelectItem>
                            <MudSelectItem T="ObjectFit" Value="ObjectFit.Fill">Fill</MudSelectItem>
                            <MudSelectItem T="ObjectFit" Value="ObjectFit.ScaleDown">ScaleDown</MudSelectItem>
                        </MudSelect>
                        <MudSelect Label="Posicion" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense" @bind-Value="@InicioDto.ImagePosition" Class="mt-4">
                            <MudSelectItem T="ObjectPosition" Value="ObjectPosition.Top">Top</MudSelectItem>
                            <MudSelectItem T="ObjectPosition" Value="ObjectPosition.Bottom">Bottom</MudSelectItem>
                            <MudSelectItem T="ObjectPosition" Value="ObjectPosition.Left">Left</MudSelectItem>
                            <MudSelectItem T="ObjectPosition" Value="ObjectPosition.LeftTop">LeftTop</MudSelectItem>
                            <MudSelectItem T="ObjectPosition" Value="ObjectPosition.LeftBottom">LeftBottom</MudSelectItem>
                            <MudSelectItem T="ObjectPosition" Value="ObjectPosition.Right">Right</MudSelectItem>
                            <MudSelectItem T="ObjectPosition" Value="ObjectPosition.RightTop">RightTop</MudSelectItem>
                            <MudSelectItem T="ObjectPosition" Value="ObjectPosition.RightBottom">RightBottom</MudSelectItem>
                        </MudSelect>
                        <div class="d-flex justify-space-between align-center">
                            <MudText>Height: @(SetHeight ? $"{@InicioDto.ImageHeight}px" : "Auto")</MudText>
                                <MudSwitch @bind-Checked="@SetHeight" Color="Color.Secondary" Class="mr-0" />
                            </div>
                            <MudSlider @bind-Value="@InicioDto.ImageHeight" Disabled="@(!SetHeight)" Max="140" Color="Color.Secondary" />
                        </MudPaper>
                    </MudItem>
                    <MudItem xs="6" md="6">
                        <MudPaper Class="col-md-12" Elevation="0">
                            <MudText Typo="Typo.h6">Opciones de Logo Principal</MudText>
                            <MudSelect Label="Image Fit" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense" @bind-Value="@InicioDto.ImageFit" Class="mt-4">
                                <MudSelectItem T="ObjectFit" Value="ObjectFit.None">None</MudSelectItem>
                                <MudSelectItem T="ObjectFit" Value="ObjectFit.Cover">Cover</MudSelectItem>
                                <MudSelectItem T="ObjectFit" Value="ObjectFit.Contain">Contain</MudSelectItem>
                                <MudSelectItem T="ObjectFit" Value="ObjectFit.Fill">Fill</MudSelectItem>
                                <MudSelectItem T="ObjectFit" Value="ObjectFit.ScaleDown">ScaleDown</MudSelectItem>
                            </MudSelect>
                            <MudSelect Label="Posicion" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense" @bind-Value="@InicioDto.ImagePosition" Class="mt-4">
                                <MudSelectItem T="ObjectPosition" Value="ObjectPosition.Top">Top</MudSelectItem>
                                <MudSelectItem T="ObjectPosition" Value="ObjectPosition.Bottom">Bottom</MudSelectItem>
                                <MudSelectItem T="ObjectPosition" Value="ObjectPosition.Left">Left</MudSelectItem>
                                <MudSelectItem T="ObjectPosition" Value="ObjectPosition.LeftTop">LeftTop</MudSelectItem>
                                <MudSelectItem T="ObjectPosition" Value="ObjectPosition.LeftBottom">LeftBottom</MudSelectItem>
                                <MudSelectItem T="ObjectPosition" Value="ObjectPosition.Right">Right</MudSelectItem>
                                <MudSelectItem T="ObjectPosition" Value="ObjectPosition.RightTop">RightTop</MudSelectItem>
                                <MudSelectItem T="ObjectPosition" Value="ObjectPosition.RightBottom">RightBottom</MudSelectItem>
                            </MudSelect>
                            <div class="d-flex justify-space-between align-center">
                                <MudText>Width: @(SetWidth ? $"{@InicioDto.ImageWidth}px" : "Auto")</MudText>
                                <MudSwitch @bind-Checked="@SetWidth" Color="Color.Primary" Class="mr-0" />
                            </div>
                            <MudSlider @bind-Value="@InicioDto.ImageWidth" Disabled="@(!SetWidth)" Max="1200" Color="Color.Primary" />
                            <div class="d-flex justify-space-between align-center">
                                <MudText>Height: @(SetHeight ? $"{@InicioDto.ImageHeight}px" : "Auto")</MudText>
                                <MudSwitch @bind-Checked="@SetHeight" Color="Color.Secondary" Class="mr-0" />
                            </div>
                            <MudSlider @bind-Value="@InicioDto.ImageHeight" Disabled="@(!SetHeight)" Max="140" Color="Color.Secondary" />
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </EditForm>
    }
</div>

@code {
    private bool isLoading { get; set; } = false;
    private InicioDto InicioDto = new();
    private InicioDto InicioDtoGrabado = new();
    private string Titulo = String.Empty;
    private IBrowserFile selectedImage { get; set; }
    public bool SetHeight { get; set; } = true;
    public bool SetWidth { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //Only load the categories the first time the page is rendered
        if (firstRender)
        {
            await ObtenerInicio();
        }
    }

    private async Task ObtenerInicio()
    {
        isLoading = true;
        StateHasChanged();
        var result = await _inicioRepository.ObtenerInicio();
        if (result != null && result.Exito)
        {
            InicioDto = result.Data;
            // Grabar la imagen para ver si cambio
            InicioDtoGrabado.ImagenDeInicio = InicioDto.ImagenDeInicio;
        }
        isLoading = false;
        StateHasChanged();
    }

    private async Task CambiarInicio()
    {

        if (InicioDtoGrabado.ImagenDeInicio != InicioDto.ImagenDeInicio)
        {
            InicioDto.ImagenDeInicio = await _fileUpload.UploadFile(selectedImage);
        }

        var resultado = await _inicioRepository.CrearEditarInicio(InicioDto);
        if (resultado != null && resultado.Exito)
        {
            await _jsRuntime.ToastrSuccess("Inicio Grabado Exitosamente.");
        }
        else
        {
            await _jsRuntime.ToastrError("Inicio No Se Pudo Grabar.");
        }
        await ObtenerInicio();
        _navigationManager.NavigateTo("/ManejarInicio", true);
    }

    private async Task HandleImageUpload(InputFileChangeEventArgs e)
    {
        var rawFile = e.File;


        if (rawFile != null)
        {
            System.IO.FileInfo fileInfo = new System.IO.FileInfo(rawFile.Name);
            if (fileInfo.Extension.ToLower() == ".jpg" ||
            fileInfo.Extension.ToLower() == ".png" ||
            fileInfo.Extension.ToLower() == ".jpeg")
            {
                //Product.ImageUrl = await _fileUpload.UploadFile(rawFile);
                selectedImage = await rawFile.RequestImageFileAsync(rawFile.ContentType, 1024, 140);

                //var stream = new MemoryStream();
                //await selectedImage.OpenReadStream().CopyToAsync(stream);

                var buf = new byte[selectedImage.Size]; // allocate a buffer to fill with the file's data
                using (var stream = selectedImage.OpenReadStream())
                {
                    await stream.ReadAsync(buf); // copy the stream to the buffer
                }

                InicioDto.ImagenDeInicio = $"data:{rawFile.ContentType};base64,{Convert.ToBase64String(buf.ToArray())}";
            }
            else
            {
                await _jsRuntime.ToastrError("Porfavor escojer una foto de tipo .jpg/.jpeg/.png file only");
                StateHasChanged();
            }
        }
    }

    private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
    {
        new ToolbarItemModel() { Command = ToolbarCommand.Bold },
        new ToolbarItemModel() { Command = ToolbarCommand.Italic },
        new ToolbarItemModel() { Command = ToolbarCommand.Underline },
        new ToolbarItemModel() { Command = ToolbarCommand.StrikeThrough },
        new ToolbarItemModel() { Command = ToolbarCommand.FontName },
        new ToolbarItemModel() { Command = ToolbarCommand.FontSize },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.FontColor },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.Formats },
        new ToolbarItemModel() { Command = ToolbarCommand.Alignments },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.Undo },
        new ToolbarItemModel() { Command = ToolbarCommand.Redo }
    };

    void SetImagePosition(ObjectPosition value)
    {
        InicioDto.ImagePosition = value;
    }
}
